In this application I implemented my own zooming and panning features and my own draw streamlines. Zooming and panning is pretty straight forward the user will have three slider. One for zoom and two for panning X and panning Y. The idea is to give the user the freedom to interact with the image without any problems. The data is being shown in a rectangle 500*500 and it is shifted by 250 and 200. The zoom slider allows the user to zoom out/in. The image is being drawn also by using a color map. The user can also draw streamlines by just clicking the position of the image that he/she needs. The program will also re-size the streamlines if the user tries to zoom in or zoom out. The user can adjust by using the slider the dt and the number of the step. Moreover, the user can actually select to erase the streamlines and/or have them sync. The sync option is basically an option that allows the user if it is on to have all the streamlines already drawn or the streamlines that are going to be drawn have the same dt and number of step. If that option is off then the user can draw different lines with different dt and steps without any problems. 

The dataset vortex. It was actually really interesting to me, in fact the streamlines are drawn in a circle (image1). I also thought that in this case a zoom feature was kind useful to actually see better the circles and better how “deep” they go(image2). The dataset was more interesting to me was the 3cycles. I think that the data “hides” a lot of features like in image3 I was able to see something that probably without streamline I wouldn’t be able to see it. It also interesting how streamlines diverges in certain areas like image4. The other dataset that I think I “have” to talk about is the one about Italy. I found the dataset very interesting for the fact that the vectors maps some value of the Mediterranean Sea around Italy. At first glance it was also hard seeing Italy by I guess by drawing more streamlines it was more clear where it is.(image5). Also the zoom was very helpful to find the right place. I think the combination of the two components velocity magnitude and geometric encoding using streamlines makes the application more complete by having just one the components the application is missing the ability to analyze further the data. I can’t see exactly where the streamlines are in specific area of interest without the zoom and with just the zoom I cannot see the streamlines understanding the magnitude of the vectors.

My sketch (image6) of the project started with a very simple approach. Three sliders for panning and zooming and just the ability to click on the picture for drawing lines and the ability on the image by using the slider to set steps and number of steps. My final implementation differs from my initial idea by giving the ability to the user to erase the streamlines and the ability to sync the lines so to have them stretch or shrink. This last features was creates to give the user a better ability to interact with the data. 